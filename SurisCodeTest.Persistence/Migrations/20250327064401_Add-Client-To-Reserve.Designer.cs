// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurisCodeTest.Persistence;

#nullable disable

namespace SurisCodeTest.Persistence.Migrations
{
    [DbContext(typeof(SurisCodeTestDbContext))]
    [Migration("20250327064401_Add-Client-To-Reserve")]
    partial class AddClientToReserve
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.Reserve", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("ServiceWorkingTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ServiceWorkingTimeId");

                    b.HasIndex("Date", "ServiceWorkingTimeId")
                        .IsUnique();

                    b.ToTable("Reserve");
                });

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7997635-1f0b-4fca-8f0d-c72eada760b5"),
                            Name = "Servicio 1"
                        },
                        new
                        {
                            Id = new Guid("07421f5a-3c0e-4dd4-8bcb-42ef8018e661"),
                            Name = "Servicio 2"
                        },
                        new
                        {
                            Id = new Guid("00ca27f5-d926-4d35-b120-5a9d43277e0b"),
                            Name = "Servicio 3"
                        },
                        new
                        {
                            Id = new Guid("753abd1c-ede5-4d56-aa09-083b9d266165"),
                            Name = "Servicio 4"
                        },
                        new
                        {
                            Id = new Guid("cf4ac3bb-9022-4dc3-9b29-6adaefdb6180"),
                            Name = "Servicio 5"
                        });
                });

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.ServiceWorkingTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkingTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkingTimeId");

                    b.HasIndex("ServiceId", "WorkingTimeId")
                        .IsUnique();

                    b.ToTable("ServiceWorkingTime");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b4dce03-5d7d-4234-8aae-7b757ec0bffe"),
                            ServiceId = new Guid("b7997635-1f0b-4fca-8f0d-c72eada760b5"),
                            WorkingTimeId = new Guid("a7996de4-4874-4998-80fc-5b34570ad802")
                        },
                        new
                        {
                            Id = new Guid("28a48cde-6f43-40c2-ad4d-b1ae806c368c"),
                            ServiceId = new Guid("b7997635-1f0b-4fca-8f0d-c72eada760b5"),
                            WorkingTimeId = new Guid("faa3f59a-1915-42aa-a703-dab4543afcf7")
                        },
                        new
                        {
                            Id = new Guid("845137c8-a5b0-4612-8b5e-89a525ef6b83"),
                            ServiceId = new Guid("b7997635-1f0b-4fca-8f0d-c72eada760b5"),
                            WorkingTimeId = new Guid("b07906ec-c486-4aaa-b56e-e318a557afcb")
                        },
                        new
                        {
                            Id = new Guid("bcae88c7-14b8-423a-9c10-6244365337d7"),
                            ServiceId = new Guid("b7997635-1f0b-4fca-8f0d-c72eada760b5"),
                            WorkingTimeId = new Guid("8bd023b7-4f09-4823-a2a7-d0d45df7223c")
                        },
                        new
                        {
                            Id = new Guid("4332ca43-c21d-44b6-ac55-e0e236c2e628"),
                            ServiceId = new Guid("b7997635-1f0b-4fca-8f0d-c72eada760b5"),
                            WorkingTimeId = new Guid("164ff347-a959-476f-b0aa-2e36132b7b27")
                        },
                        new
                        {
                            Id = new Guid("e515ccd5-5364-44c3-ae10-2d09ac7f8ab3"),
                            ServiceId = new Guid("07421f5a-3c0e-4dd4-8bcb-42ef8018e661"),
                            WorkingTimeId = new Guid("a7996de4-4874-4998-80fc-5b34570ad802")
                        },
                        new
                        {
                            Id = new Guid("b5b9d36e-a8ef-459d-8e7a-c0ae6915ce92"),
                            ServiceId = new Guid("07421f5a-3c0e-4dd4-8bcb-42ef8018e661"),
                            WorkingTimeId = new Guid("b07906ec-c486-4aaa-b56e-e318a557afcb")
                        },
                        new
                        {
                            Id = new Guid("b82b553f-9b82-452c-9f5f-31a782ce0647"),
                            ServiceId = new Guid("07421f5a-3c0e-4dd4-8bcb-42ef8018e661"),
                            WorkingTimeId = new Guid("164ff347-a959-476f-b0aa-2e36132b7b27")
                        },
                        new
                        {
                            Id = new Guid("b5ae81b6-194e-43f7-adf0-acae019e54cf"),
                            ServiceId = new Guid("753abd1c-ede5-4d56-aa09-083b9d266165"),
                            WorkingTimeId = new Guid("faa3f59a-1915-42aa-a703-dab4543afcf7")
                        },
                        new
                        {
                            Id = new Guid("08732dd0-e9e4-4546-8739-c48f6560cfb4"),
                            ServiceId = new Guid("753abd1c-ede5-4d56-aa09-083b9d266165"),
                            WorkingTimeId = new Guid("8bd023b7-4f09-4823-a2a7-d0d45df7223c")
                        });
                });

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.WorkingTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("WorkingTime");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7996de4-4874-4998-80fc-5b34570ad802"),
                            Time = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("faa3f59a-1915-42aa-a703-dab4543afcf7"),
                            Time = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("b07906ec-c486-4aaa-b56e-e318a557afcb"),
                            Time = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("8bd023b7-4f09-4823-a2a7-d0d45df7223c"),
                            Time = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("164ff347-a959-476f-b0aa-2e36132b7b27"),
                            Time = new TimeOnly(12, 0, 0)
                        });
                });

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.Reserve", b =>
                {
                    b.HasOne("SurisCodeTest.Persistence.Entities.ServiceWorkingTime", "ServiceWorkingTime")
                        .WithMany()
                        .HasForeignKey("ServiceWorkingTimeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServiceWorkingTime");
                });

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.ServiceWorkingTime", b =>
                {
                    b.HasOne("SurisCodeTest.Persistence.Entities.Service", "Service")
                        .WithMany("ServiceWorkingTime")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SurisCodeTest.Persistence.Entities.WorkingTime", "WorkingTime")
                        .WithMany("ServiceWorkingTime")
                        .HasForeignKey("WorkingTimeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("WorkingTime");
                });

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.Service", b =>
                {
                    b.Navigation("ServiceWorkingTime");
                });

            modelBuilder.Entity("SurisCodeTest.Persistence.Entities.WorkingTime", b =>
                {
                    b.Navigation("ServiceWorkingTime");
                });
#pragma warning restore 612, 618
        }
    }
}
